{"version":3,"sources":["utils/http.ts","api/auth.ts","pages/auth/index.tsx"],"names":["httpInit","axios","create","timeout","interceptors","request","use","config","params","__t","Date","getTime","withCredentials","response","data","code","message","error","localStorage","clear","window","isReloading","location","reload","responseType","msg","Promise","reject","status","includes","api","login","url","get","then","res","Auth","style","height","display","justifyContent","alignItems","background","width","padding","boxShadow","fontSize","fontWeight","lineHeight","textAlign","marginTop","marginBottom","textShadow","letterSpacing","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","console","log","finally","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","placeholder","Password","offset","type","htmlType"],"mappings":"qNAGMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,OAKXH,EAASI,aAAaC,QAAQC,KAAI,SAACC,GAMjC,OAHAA,EAAOC,OAASD,EAAOC,OAASD,EAAOC,OAAS,GAChDD,EAAOC,OAAOC,KAAM,IAAIC,MAAOC,UAC/BJ,EAAOK,iBAAkB,EAClBL,KAGTP,EAASI,aAAaS,SAASP,KAC7B,SAACO,GAAc,IAAD,IAQgE,EAP5E,OAA4B,OAAxB,UAAAA,EAASC,YAAT,eAAeC,OACjBC,EAAA,EAAQC,MAAM,4BACdC,aAAaC,QACZC,OAAeC,aAAc,EAC9BD,OAAOE,SAASC,SACTV,GAEmB,OAAxB,UAAAA,EAASC,YAAT,eAAeC,OAAiD,SAAjCF,EAASN,OAAOiB,eAEjD,UAAAX,EAASC,YAAT,eAAeW,MAAOT,EAAA,EAAQC,MAAMJ,EAASC,KAAKW,KAC3CC,QAAQC,OAAOd,EAASC,KAAKW,MAE/BZ,KAET,SAACI,GAAW,IAAD,EAKT,OAJgC,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOJ,gBAAP,eAAiBe,UACnBV,aAAaC,QACbC,OAAOE,SAASC,WAET,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOD,UAAWC,EAAMD,QAAQa,SAAS,YAC3Cb,EAAA,EAAQC,MAAM,8CACPS,QAAQC,OAAO,+CAEjBD,QAAQC,OAAOV,MAmBXjB,ICtDA8B,EANH,CACVC,MADU,SACJvB,GACJ,OD8CuBwB,EC9CR,SD+CVhC,EAASiC,IAAID,EAAKzB,IC/CE2B,MAAK,SAACC,GAAD,OAASA,EAAIrB,QD8CxC,IAAoBkB,EAAazB,I,OEuBzB6B,UAvEY,WAczB,OACE,qBACEC,MAAO,CACLC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,yBANhB,SAQE,sBACEL,MAAO,CACLM,MAAO,IACPL,OAAQ,IACRM,QAAS,OACTF,WAAY,OACZG,UAAW,4BANf,UAQE,qBACER,MAAO,CACLS,SAAU,GACVC,WAAY,IACZC,WAAY,OACZC,UAAW,SACXC,UAAW,GACXC,aAAc,GACdC,WAAY,2BACZC,cAAe,OATnB,8DAaA,oBACEC,KAAK,QACLC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SAhDS,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxB/B,EACGC,MAAM8B,GACN3B,MAAK,SAACC,GACL2B,QAAQC,IAAI5B,MAEb6B,SAAQ,gBA0CLC,eAvCe,SAACC,GACtBJ,QAAQC,IAAI,UAAWG,IAuCjBC,aAAa,MAPf,UAQE,kBAAMC,KAAN,CAAWC,MAAM,eAAKf,KAAK,WAAWgB,MAAO,CAAC,CAAEC,UAAU,EAAMvD,QAAS,oCAAzE,SACE,mBAAOwD,YAAY,qCAGrB,kBAAMJ,KAAN,CAAWC,MAAM,eAAKf,KAAK,WAAWgB,MAAO,CAAC,CAAEC,UAAU,EAAMvD,QAAS,oCAAzE,SACE,kBAAOyD,SAAP,CAAgBD,YAAY,qCAG9B,kBAAMJ,KAAN,CAAWX,WAAY,CAAEiB,OAAQ,EAAGlB,KAAM,IAA1C,SACE,mBAAQmB,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/7.b7f2c4a1.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig, AxiosPromise } from 'axios';\r\nimport { message } from 'antd';\r\n\r\nconst httpInit = axios.create({\r\n  timeout: 15000\r\n});\r\n\r\nexport type HttpConfig = AxiosRequestConfig;\r\n\r\nhttpInit.interceptors.request.use((config) => {\r\n  // resolve ie cache problem\r\n  // 所有请求都添加时间戳 便于后端进行重放\r\n  config.params = config.params ? config.params : {};\r\n  config.params.__t = new Date().getTime();\r\n  config.withCredentials = false;\r\n  return config;\r\n});\r\n\r\nhttpInit.interceptors.response.use(\r\n  (response) => {\r\n    if (response.data?.code === 401) {\r\n      message.error('认证过期');\r\n      localStorage.clear();\r\n      (window as any).isReloading = true;\r\n      window.location.reload();\r\n      return response;\r\n    }\r\n    if (response.data?.code !== 200 && response.config.responseType !== 'blob') {\r\n      // 返回blob类型时，没有code字段\r\n      response.data?.msg && message.error(response.data.msg);\r\n      return Promise.reject(response.data.msg);\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error?.response?.status === 401) {\r\n      localStorage.clear();\r\n      window.location.reload();\r\n    }\r\n    if (error?.message && error.message.includes('timeout')) {\r\n      message.error('连接服务器超时');\r\n      return Promise.reject('连接服务器超时');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport function httpPost<T>(url: string, data?: any, config?: HttpConfig): AxiosPromise<T> {\r\n  return httpInit.post(url, data, config);\r\n}\r\nexport function httpGet<T>(url: string, config?: HttpConfig): AxiosPromise<T> {\r\n  return httpInit.get(url, config);\r\n}\r\nexport function httpDelete<T>(url: string, data?: any): AxiosPromise<T> {\r\n  return httpInit.delete(url, { data });\r\n}\r\nexport function httpPut<T>(url: string, data?: any, config?: HttpConfig): AxiosPromise<T> {\r\n  return httpInit.put(url, data, config);\r\n}\r\nexport function httpPatch<T>(url: string, data?: any, config?: HttpConfig): AxiosPromise<T> {\r\n  return httpInit.patch(url, data, config);\r\n}\r\nexport default httpInit;\r\n","import { httpGet } from 'utils/http';\r\n\r\nconst api = {\r\n  login(params: any) {\r\n    return httpGet('/login').then((res) => res.data);\r\n  }\r\n};\r\n\r\nexport default api;\r\n","import { Form, Input, Button } from 'antd';\r\nimport api from 'api/auth';\r\nconst Auth: React.FC<{}> = () => {\r\n  const onFinish = (values: any) => {\r\n    console.log('Success:', values);\r\n    api\r\n      .login(values)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        background: 'rgba(245,245,245,0.8)'\r\n      }}>\r\n      <div\r\n        style={{\r\n          width: 400,\r\n          height: 270,\r\n          padding: '20px',\r\n          background: '#fff',\r\n          boxShadow: '0 0 10px rgba(0,0,0,0.1)'\r\n        }}>\r\n        <div\r\n          style={{\r\n            fontSize: 24,\r\n            fontWeight: 700,\r\n            lineHeight: '40px',\r\n            textAlign: 'center',\r\n            marginTop: 10,\r\n            marginBottom: 20,\r\n            textShadow: '0 0 10px rgba(0,0,0,0.1)',\r\n            letterSpacing: '2px'\r\n          }}>\r\n          欢迎登录配置中心\r\n        </div>\r\n        <Form\r\n          name=\"basic\"\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\">\r\n          <Form.Item label=\"账号\" name=\"username\" rules={[{ required: true, message: '请输入账号!' }]}>\r\n            <Input placeholder=\"请输入账号\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"密码\" name=\"password\" rules={[{ required: true, message: '请输入密码!' }]}>\r\n            <Input.Password placeholder=\"请输入密码\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 4, span: 20 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}