{"version":3,"sources":["../webpack/universalModuleDefinition","public-path.js","reportWebVitals.ts","index.tsx","qiankun-config.ts","components/Loading/index.tsx","pages/404.tsx","App.tsx"],"names":["root","factory","exports","module","define","amd","window","__POWERED_BY_QIANKUN__","__webpack_public_path__","__INJECTED_PUBLIC_PATH_BY_QIANKUN__","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","props","container","ReactDOM","App","querySelector","document","bootstrap","a","console","log","mount","unmount","unmountComponentAtNode","inQianKun","_package","require","getBaseUrl","microName","Loading","backgroundColor","color","padding","style","position","top","bottom","left","right","background","display","justifyContent","alignItems","zIndex","fontSize","NotFount","className","imageStyle","height","description","AppEntrance","lazy","AuthEntrance","GlobalContext","createContext","useGlobalContext","useContext","useState","localStorage","getItem","isLogin","setIsLogin","resolveRouter","useCallback","Entrance","to","Provider","value","locale","zhCN","basename","fallback","exact","path","createElement","NotFound"],"mappings":"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","file":"static/js/main.7e266b37.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"config-center-main\"] = factory();\n\telse\n\t\troot[\"config-center-main\"] = factory();\n})(window, function() {\nreturn ","if (window.__POWERED_BY_QIANKUN__) {\r\n  // eslint-disable-next-line no-undef\r\n  __webpack_public_path__ = window.__INJECTED_PUBLIC_PATH_BY_QIANKUN__;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './public-path';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { inQianKun } from 'qiankun-config';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.scss';\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n/** 微应用配置 begin */\r\nfunction render(props: any) {\r\n  const { container } = props;\r\n  ReactDOM.render(<App />, container ? container.querySelector('#root') : document.querySelector('#root'));\r\n}\r\n\r\nif (!inQianKun()) {\r\n  render({});\r\n}\r\n\r\nexport async function bootstrap() {\r\n  console.log('react app bootstraped');\r\n}\r\n\r\nexport async function mount(props: any) {\r\n  render(props);\r\n}\r\n\r\nexport async function unmount(props: any) {\r\n  const { container } = props;\r\n  ReactDOM.unmountComponentAtNode(container ? container.querySelector('#root') : document.querySelector('#root'));\r\n}\r\n\r\n/** 微应用配置 end */\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","const _package = require('../package.json');\r\n\r\nexport const inQianKun = () => (window as any).__POWERED_BY_QIANKUN__;\r\n// if inQianKun then activeRule; else 部署目录\r\n// export const getBaseUrl = () => (inQianKun() ? _package.activeRule : _package.homepage);\r\n\r\nexport const getBaseUrl = () => (inQianKun() ? `/main/${_package.microName}` : `/apps/${_package.microName}/`);\r\n","import React from 'react';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\ninterface LoadingProps {\r\n  backgroundColor?: string;\r\n  color?: string;\r\n  padding?: number;\r\n}\r\n\r\nconst Loading: React.FC<LoadingProps> = ({ backgroundColor, color, padding }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: padding || 0,\r\n        bottom: padding || 0,\r\n        left: padding || 0,\r\n        right: padding || 0,\r\n        background: backgroundColor || '#ffffff',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: color || '#00a2ff',\r\n        zIndex: 999\r\n      }}>\r\n      <LoadingOutlined style={{ fontSize: 36 }}></LoadingOutlined>\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Empty } from 'antd';\r\n\r\nconst NotFount: React.FC = () => {\r\n  return (\r\n    <div className=\"error-page-container\">\r\n      <Empty\r\n        imageStyle={{\r\n          height: 600\r\n        }}\r\n        description={<>抱歉，您找的页面不存在~</>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default NotFount;\r\n","import React, { useState, createContext, useContext, lazy, Suspense, useCallback, createElement } from 'react';\r\nimport { ConfigProvider } from 'antd';\r\nimport { Switch, BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport Loading from 'components/Loading'; // TODO -> csmp-ui\r\nimport { getBaseUrl } from 'qiankun-config';\r\nimport NotFound from 'pages/404'; // TODO -> csmp-ui 403\r\nconst AppEntrance = lazy(() => import('pages/app'));\r\nconst AuthEntrance = lazy(() => import('pages/auth'));\r\n// TODO\r\n// 1.登录问题 globalContext done\r\n// 2.菜单布局 左右 or 上下\r\n// 3.支持?hidemenu=yes 关闭菜单\r\n\r\ninterface GlobalInterface {\r\n  isLogin: boolean;\r\n  setIsLogin: (isLogin: boolean) => void;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalInterface);\r\nexport const useGlobalContext = () => useContext(GlobalContext);\r\n\r\nconst App: React.FC<{}> = () => {\r\n  const [isLogin, setIsLogin] = useState(!!localStorage.getItem('isLogin'));\r\n\r\n  const resolveRouter = useCallback(\r\n    (Entrance: any) => {\r\n      if (isLogin) {\r\n        return Entrance;\r\n      } else {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n    },\r\n    [isLogin]\r\n  );\r\n  return (\r\n    <GlobalContext.Provider value={{ isLogin, setIsLogin }}>\r\n      <ConfigProvider locale={zhCN}>\r\n        <BrowserRouter basename={getBaseUrl()}>\r\n          <Suspense fallback={<Loading />}>\r\n            {/* 一级菜单 */}\r\n            <Switch>\r\n              <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\r\n              <Route path=\"/app\" render={() => resolveRouter(createElement(AppEntrance))} />\r\n              <Route path=\"/login\" render={() => (isLogin ? <Redirect to=\"/app\" /> : createElement(AuthEntrance))} />\r\n              <Route render={() => createElement(NotFound)} />\r\n            </Switch>\r\n          </Suspense>\r\n        </BrowserRouter>\r\n      </ConfigProvider>\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}