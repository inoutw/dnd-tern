{"version":3,"sources":["pages/auth/style.module.scss","utils/http.ts","api/auth.ts","pages/auth/index.tsx"],"names":["module","exports","httpInit","axios","create","timeout","interceptors","request","use","config","params","__t","Date","getTime","withCredentials","response","data","code","message","error","localStorage","clear","window","isReloading","location","reload","responseType","msg","Promise","reject","status","includes","api","login","url","get","then","res","Auth","globalContext","useGlobalContext","className","style","container","content","introduce","form","welcome","title","initialValues","remember","layout","onFinish","values","console","log","finally","setItem","setIsLogin","onFinishFailed","errorInfo","autoComplete","Item","label","name","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,UAAY,yBAAyB,KAAO,oBAAoB,QAAU,uBAAuB,MAAQ,qBAAqB,YAAY,2B,4ICE5NC,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,OAKXH,EAASI,aAAaC,QAAQC,KAAI,SAACC,GAMjC,OAHAA,EAAOC,OAASD,EAAOC,OAASD,EAAOC,OAAS,GAChDD,EAAOC,OAAOC,KAAM,IAAIC,MAAOC,UAC/BJ,EAAOK,iBAAkB,EAClBL,KAGTP,EAASI,aAAaS,SAASP,KAC7B,SAACO,GAAc,IAAD,IAQgE,EAP5E,OAA4B,OAAxB,UAAAA,EAASC,YAAT,eAAeC,OACjBC,EAAA,EAAQC,MAAM,4BACdC,aAAaC,QACZC,OAAeC,aAAc,EAC9BD,OAAOE,SAASC,SACTV,GAEmB,OAAxB,UAAAA,EAASC,YAAT,eAAeC,OAAiD,SAAjCF,EAASN,OAAOiB,eAEjD,UAAAX,EAASC,YAAT,eAAeW,MAAOT,EAAA,EAAQC,MAAMJ,EAASC,KAAKW,KAC3CC,QAAQC,OAAOd,EAASC,KAAKW,MAE/BZ,KAET,SAACI,GAAW,IAAD,EAKT,OAJgC,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOJ,gBAAP,eAAiBe,UACnBV,aAAaC,QACbC,OAAOE,SAASC,WAET,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOD,UAAWC,EAAMD,QAAQa,SAAS,YAC3Cb,EAAA,EAAQC,MAAM,8CACPS,QAAQC,OAAO,+CAEjBD,QAAQC,OAAOV,MAmBXjB,ICtDA8B,EANH,CACVC,MADU,SACJvB,GACJ,OD8CuBwB,EC9CR,SD+CVhC,EAASiC,IAAID,EAAKzB,IC/CE2B,MAAK,SAACC,GAAD,OAASA,EAAIrB,QD8CxC,IAAoBkB,EAAazB,I,iCECzB6B,UA7CY,WACzB,IAAMC,EAAgBC,cAkBtB,OACE,qBAAKC,UAAWC,IAAMC,UAAtB,SACE,sBAAKF,UAAWC,IAAME,QAAtB,UACE,qBAAKH,UAAWC,IAAMG,YACtB,sBAAKJ,UAAWC,IAAMI,KAAtB,UACE,qBAAKL,UAAWC,IAAMK,QAAtB,wBACA,qBAAKN,UAAWC,IAAMM,MAAtB,kDACA,oBAAMC,cAAe,CAAEC,UAAU,GAAQC,OAAO,WAAWC,SAvBlD,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBrB,EACGC,MAAMoB,GACNjB,MAAK,SAACC,GACLiB,QAAQC,IAAIlB,MAEbmB,SAAQ,WACPpC,aAAaqC,QAAQ,UAAW,OAChClB,EAAcmB,YAAW,OAcwDC,eAVhE,SAACC,GACtBN,QAAQC,IAAI,UAAWK,IAS8FC,aAAa,MAA5H,UACE,kBAAMC,KAAN,CAAWC,MAAM,eAAKC,KAAK,WAAWC,MAAO,CAAC,CAAEC,UAAU,EAAMhD,QAAS,oCAAzE,SACE,mBAAOiD,OAAQ,cAACC,EAAA,EAAD,IAAkBC,YAAY,qCAG/C,kBAAMP,KAAN,CAAWC,MAAM,eAAKC,KAAK,WAAWC,MAAO,CAAC,CAAEC,UAAU,EAAMhD,QAAS,oCAAzE,SACE,kBAAOoD,SAAP,CAAgBH,OAAQ,cAACI,EAAA,EAAD,IAAkBF,YAAY,qCAGxD,mBAAQ5B,UAAWC,IAAM,aAAc8B,KAAK,UAAUC,SAAS,SAA/D","file":"static/js/7.a7b73e40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1g_M7\",\"content\":\"style_content__3PQQ-\",\"introduce\":\"style_introduce__3knUZ\",\"form\":\"style_form__2rDS5\",\"welcome\":\"style_welcome__1B-8j\",\"title\":\"style_title__318Ms\",\"login-btn\":\"style_login-btn__1hiyX\"};","import axios, { AxiosRequestConfig, AxiosPromise } from 'axios';\r\nimport { message } from 'antd';\r\n\r\nconst httpInit = axios.create({\r\n  timeout: 15000\r\n});\r\n\r\nexport type HttpConfig = AxiosRequestConfig;\r\n\r\nhttpInit.interceptors.request.use((config) => {\r\n  // resolve ie cache problem\r\n  // 所有请求都添加时间戳 便于后端进行重放\r\n  config.params = config.params ? config.params : {};\r\n  config.params.__t = new Date().getTime();\r\n  config.withCredentials = false;\r\n  return config;\r\n});\r\n\r\nhttpInit.interceptors.response.use(\r\n  (response) => {\r\n    if (response.data?.code === 401) {\r\n      message.error('认证过期');\r\n      localStorage.clear();\r\n      (window as any).isReloading = true;\r\n      window.location.reload();\r\n      return response;\r\n    }\r\n    if (response.data?.code !== 200 && response.config.responseType !== 'blob') {\r\n      // 返回blob类型时，没有code字段\r\n      response.data?.msg && message.error(response.data.msg);\r\n      return Promise.reject(response.data.msg);\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error?.response?.status === 401) {\r\n      localStorage.clear();\r\n      window.location.reload();\r\n    }\r\n    if (error?.message && error.message.includes('timeout')) {\r\n      message.error('连接服务器超时');\r\n      return Promise.reject('连接服务器超时');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport function httpPost<T>(url: string, data?: any, config?: HttpConfig): AxiosPromise<T> {\r\n  return httpInit.post(url, data, config);\r\n}\r\nexport function httpGet<T>(url: string, config?: HttpConfig): AxiosPromise<T> {\r\n  return httpInit.get(url, config);\r\n}\r\nexport function httpDelete<T>(url: string, data?: any): AxiosPromise<T> {\r\n  return httpInit.delete(url, { data });\r\n}\r\nexport function httpPut<T>(url: string, data?: any, config?: HttpConfig): AxiosPromise<T> {\r\n  return httpInit.put(url, data, config);\r\n}\r\nexport function httpPatch<T>(url: string, data?: any, config?: HttpConfig): AxiosPromise<T> {\r\n  return httpInit.patch(url, data, config);\r\n}\r\nexport default httpInit;\r\n","import { httpGet } from 'utils/http';\r\n\r\nconst api = {\r\n  login(params: any) {\r\n    return httpGet('/login').then((res) => res.data);\r\n  }\r\n};\r\n\r\nexport default api;\r\n","import { Form, Input, Button } from 'antd';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport api from 'api/auth';\r\nimport style from './style.module.scss';\r\nimport { useGlobalContext } from 'App';\r\n\r\nconst Auth: React.FC<{}> = () => {\r\n  const globalContext = useGlobalContext();\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log('Success:', values);\r\n    api\r\n      .login(values)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .finally(() => {\r\n        localStorage.setItem('isLogin', 'yes');\r\n        globalContext.setIsLogin(true);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.content}>\r\n        <div className={style.introduce}></div>\r\n        <div className={style.form}>\r\n          <div className={style.welcome}>Welcome to</div>\r\n          <div className={style.title}>云阵配置中心</div>\r\n          <Form initialValues={{ remember: true }} layout=\"vertical\" onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\">\r\n            <Form.Item label=\"账号\" name=\"username\" rules={[{ required: true, message: '请输入账号!' }]}>\r\n              <Input prefix={<UserOutlined />} placeholder=\"请输入账号\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"密码\" name=\"password\" rules={[{ required: true, message: '请输入密码!' }]}>\r\n              <Input.Password prefix={<LockOutlined />} placeholder=\"请输入密码\" />\r\n            </Form.Item>\r\n\r\n            <Button className={style['login-btn']} type=\"primary\" htmlType=\"submit\">\r\n              登录\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}